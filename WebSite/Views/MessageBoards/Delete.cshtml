@model WebSite.Models.MessageBoard.MessageBoardViewModel

@{
    ViewData["Title"] = "Delete";

    if (!Context.User.Claims.Any()) return;

    var isAdmin = bool.Parse(Context.User.FindFirst("isadmin")!.Value);
}

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Message board</h4>
    <hr />
    <dl class="row">
        @if (isAdmin)
        {
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.Id)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Id)
            </dd>
        }
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IsOpen)
        </dt>
        <dd class = "col-sm-10">
            @if (Model.IsOpen) @("Yes") else @("No")
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedByUsername)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreatedByUsername) @if (isAdmin) @($"(Id: {Model.CreatedById})")
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.UpdatedByUsername)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.UpdatedByUsername) @if (isAdmin) @($"(Id: {Model.UpdatedById})")
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.UpdatedOn)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.UpdatedOn)
        </dd>
    </dl>
    
    <form asp-action="Delete">
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-action="Index">Back to List</a>
    </form>
</div>
