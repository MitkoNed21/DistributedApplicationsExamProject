@model WebSite.Models.Message.IndexMessageViewModel

@{
    ViewData["Title"] = "Index";

    if (!Context.User.Claims.Any()) return;

    var isAdmin = bool.Parse(Context.User.FindFirst("isadmin")!.Value);

    var mbId = (int?)ViewData["mbId"];
}

<h1>Index</h1>

<p>
    @if (mbId.HasValue)
    {
        <a asp-action="Create" asp-route-messageBoardId="@mbId">Create New</a>
    }
    else
    {
        <a asp-action="Create">Create New</a>
    }
</p>
<form asp-action="Index">
    Filter:
    <input name="messageBoardId" value="@mbId" hidden />
    <div class="form-group">
        <label asp-for="Filter.Content" class="control-label"></label>
        <input asp-for="Filter.Content" class="form-control" />
    </div>
    <div class="form-group">
        <input type="submit" value="Filter" class="btn btn-primary" />
    </div>
</form>
<table class="table">
    <thead>
        <tr>
        @if (isAdmin)
        {
            <th>
                @Html.DisplayNameFor(model => model.Filter.Id)
            </th>
        }
            <th>
                @Html.DisplayNameFor(model => model.Filter.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Filter.Content)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Filter.IsImportant)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Filter.CreatedByUsername)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Filter.MessageBoardName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Messages) {
        <tr>
        @if (isAdmin)
        {
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
        }
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>
                @if(item.IsImportant) @("Yes") else @("No")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedByUsername) @if (isAdmin) @($"(Id: {item.CreatedById})")
            </td>
            <td>
                <a asp-action="Details" asp-controller="messageBoards" asp-route-id="@item.MessageBoardId">
                    @item.MessageBoardName
                </a> @if (isAdmin) @($"(Id: {item.MessageBoardId})")
            </td>
            @if (mbId.HasValue)
            {
                <td>
                    @if (item.CreatedById == int.Parse(Context.User.FindFirst("id")!.Value) || isAdmin)
                    {
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id, messageBoardId = mbId.Value }) @(" | ")
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id, messageBoardId = mbId.Value }) @(" | ")
                    }
                    @Html.ActionLink("Details", "Details", new { id = item.Id, messageBoardId = mbId.Value })
                </td>
            }
            else
            {
                <td>
                    @if (item.CreatedById == int.Parse(Context.User.FindFirst("id")!.Value) || isAdmin)
                    {
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) @(" | ")
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id }) @(" | ")
                    }
                    @Html.ActionLink("Details", "Details", new { id = item.Id })
                </td>
            }
        </tr>
}
    </tbody>
</table>
